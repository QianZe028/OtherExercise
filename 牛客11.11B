/*

小竹太笨一直算不出来自己的年龄，一不留神走丢了。

妈妈很着急，这时劫匪打来了电话:"你儿子在我手里,请给我一百万,否则就不可能放你儿子走"。

妈妈哪里有那么多钱，但是她早就在小竹身上放了定位器,找到了劫匪的老窝。

妈妈发现劫匪窝除了关小竹的房间还有mm个房间，小竹的房间有nn个可以逃离的出口，每个出口连接着mm个房间中的某一个。当一个出口连接的房间有劫匪时，该出口便不能逃离。

现在，妈妈想请你编写一个程序，求出有且仅有一位劫匪在 xx 号房间时，nn个出口中有多少个出口可以逃离。

由于劫匪身处的房间不是固定的，妈妈会进行 qq 次询问。
输入描述:
第一行三个整数 n,m,q(1\le n,m,q \le 10^5)n,m,q(1≤n,m,q≤10 5)。

第二行 nn 个用空格隔开的整数,第 ii 个整数为 a_i(1 \le a_i \le m)a 
i
​
 (1≤a 
i
​
 ≤m)，表示编号为 ii 的出口,连接着a_ia 
i
​
 号房间。

接下来 qq 行，每行 一个用空格隔开的整数x(1 \le x \le m)x(1≤x≤m)。
输出描述:
qq 行, 每行一个整数，表示有多少个出口可以逃离。
示例1
输入
复制
5 2 2
1 2 2 1 2
1
2
输出
复制
3
2
说明
劫匪在 11 号房间, 33 个连接 22 号房间的出口可以逃出
劫匪在 22 号房间, 22 个连接 11 号房间的出口可以逃出
*/


import java.util.Scanner;

/*
522
21122

*/
public class Main {
 public static void main(String[] args){
    Scanner my =  new Scanner(System.in);
     int n = my.nextInt();  // 出口数量 5
     int m = my.nextInt(); // 房间数量  2 
     int q = my.nextInt();   // 询问次数   2 
     
     int[] a = new int[100000 + 1];
     for (int i = 0 ; i < n; i++){
       int num = my.nextInt();      // 输入n次，n个数
         a[num]++;         //1 a[1] ++   2 a[2]++  2 a[2]++   1 a[1]++   2 a[2]++
     }                 // a[1] =2 ; a[2] =3;
      
     while(q-- >0){  // q = 2;
         int qq =  my.nextInt();
         System.out.println (n - a[qq]);
     }
 }   
}
